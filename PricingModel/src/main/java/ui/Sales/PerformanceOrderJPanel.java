/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Sales;

import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.OrderManagement.Order;
import model.OrderManagement.OrderItem;
import model.ProductManagement.Product;
import model.ProductManagement.ProductCatalog;
import model.SalesManagement.SalesPersonProfile;
import model.Supplier.Supplier;

/**
 *
 * @author nikha
 */
public class PerformanceOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PerformanceOrder
     */
      private ArrayList<Order> orders;
    JPanel cardSequencePanel;
    Business business;
    SalesPersonProfile salesPerson;
    Supplier selectedSupplier;
    private ProductCatalog productCatalog;
    
    
    public PerformanceOrderJPanel() {
        initComponents();
         this.cardSequencePanel = cardSequencePanel;
        this.business = business;
        this.salesPerson = salesPerson;
        this.orders = orders;
        this.productCatalog = productCatalog;
        
        lblTitle.setBackground(new Color(153, 153, 255));
        lblTitle.setOpaque(true);
        Border border = new LineBorder(Color.GRAY,2,true);
        lblTitle.setBorder(border);
        
        initializeTable();
        populateRevenueFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblCompanySalesRevenue = new javax.swing.JLabel();
        lblTargetSalesRevenue = new javax.swing.JLabel();
        txtCompanySalesRevenue = new javax.swing.JTextField();
        txtTargetSalesRevenue = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        lblCompanyRevenueStatus = new javax.swing.JLabel();
        scrollPane = new javax.swing.JScrollPane();
        tblProductRevenue = new javax.swing.JTable();
        supplierComboBox = new javax.swing.JComboBox<>();

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("PERFORMANCE REPORT");

        lblCompanySalesRevenue.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCompanySalesRevenue.setText("Company Revenue Sales:");

        lblTargetSalesRevenue.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTargetSalesRevenue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTargetSalesRevenue.setText("Target Sales Revenue:");

        txtTargetSalesRevenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTargetSalesRevenueActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(153, 153, 255));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblCompanyRevenueStatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        tblProductRevenue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "PRODUCT NAME ", "REVENUE %"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(tblProductRevenue);

        supplierComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        supplierComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTargetSalesRevenue)
                        .addGap(18, 18, 18)
                        .addComponent(txtTargetSalesRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblCompanySalesRevenue)
                        .addGap(18, 18, 18)
                        .addComponent(txtCompanySalesRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(supplierComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(lblCompanyRevenueStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTargetSalesRevenue)
                    .addComponent(txtTargetSalesRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCompanySalesRevenue)
                    .addComponent(txtCompanySalesRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCompanyRevenueStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supplierComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTargetSalesRevenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTargetSalesRevenueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTargetSalesRevenueActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        SalesWorkAreaJPanel panel = new SalesWorkAreaJPanel(business, salesPerson, 
        cardSequencePanel, btnBack);
        cardSequencePanel.add("SalesWorkAreaJPanel", panel);
        CardLayout cardLayout = new CardLayout();
        cardSequencePanel.setLayout(cardLayout);
        CardLayout layout = (CardLayout) cardSequencePanel.getLayout();
        layout.next(cardSequencePanel);

    }//GEN-LAST:event_btnBackActionPerformed

    private void supplierComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierComboBoxActionPerformed
        // TODO add your handling code here:
         refreshSupplierCatalogTable();

    }//GEN-LAST:event_supplierComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel lblCompanyRevenueStatus;
    private javax.swing.JLabel lblCompanySalesRevenue;
    private javax.swing.JLabel lblTargetSalesRevenue;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JComboBox<String> supplierComboBox;
    private javax.swing.JTable tblProductRevenue;
    private javax.swing.JTextField txtCompanySalesRevenue;
    private javax.swing.JTextField txtTargetSalesRevenue;
    // End of variables declaration//GEN-END:variables

    private void initializeTable() {
 cleanUpCombobox();
        cleanUpTable();
        
        ArrayList<Supplier> supplierList = business.getSupplierDirectory().getSuplierList();
        
        if(supplierList.isEmpty()){
            return;
        }
        
        for(Supplier supplier : supplierList){
            supplierComboBox.addItem(supplier.toString());
            supplierComboBox.setSelectedIndex(0);
            
            String supplierName = (String) supplierComboBox.getSelectedItem();
            selectedSupplier = business.getSupplierDirectory().findSupplier(supplierName);
            
            ProductCatalog productCatalog = selectedSupplier.getProductCatalog();
        }    }

    private void populateRevenueFields() {
 int totalTargetSalesRevenue = calculateTotalTargetSalesRevenue();
        int totalSalesRevenue = calculateTotalSalesRevenue();
        
        int profitOrLoss = totalSalesRevenue - totalTargetSalesRevenue;
        double profitOrLossPercentage = ((double) profitOrLoss / totalTargetSalesRevenue) * 100;
        
        txtTargetSalesRevenue.setText(String.valueOf(totalTargetSalesRevenue));
        txtCompanySalesRevenue.setText(String.valueOf(totalSalesRevenue));
        
        if(profitOrLoss > 0){
            lblCompanyRevenueStatus.setForeground(Color.green);
            lblCompanyRevenueStatus.setBackground(Color.black);
            lblCompanyRevenueStatus.setOpaque(true);
            lblCompanyRevenueStatus.setText("   PROFIT OF $" +profitOrLoss + " (" + String.format("%.2f", profitOrLossPercentage) + "%)");
        }
        
        else if(profitOrLoss < 0){
            lblCompanyRevenueStatus.setForeground(Color.red);
            lblCompanyRevenueStatus.setBackground(Color.black);
            lblCompanyRevenueStatus.setOpaque(true);
            lblCompanyRevenueStatus.setText("   LOSS: $" + profitOrLoss + " (" + String.format("%.2f", profitOrLossPercentage) + "%)");
        }
        
        else{
            
            lblCompanyRevenueStatus.setForeground(Color.orange);
            lblCompanyRevenueStatus.setBackground(Color.black);
            lblCompanyRevenueStatus.setOpaque(true);
            lblCompanyRevenueStatus.setText("   NO PROFIT NO LOSS ");
        }
    }
    
    
    
       private int calculateTotalTargetSalesRevenue() {
        int total = 0;
        for (Order order : orders) {
            for (OrderItem oi : order.getOrderitems()) {
                total += oi.getStoredTargetPrice() * oi.getQuantity();
            }
        }
        System.out.println("Total Target Sales Revenue: " + total);
        return total;
    }
    
    
    public void cleanUpCombobox() {
        
        supplierComboBox.removeAllItems();
    }

    
    
    public void cleanUpTable() {

        int row = tblProductRevenue.getRowCount();
        int i;
        for (i = row - 1; i >= 0; i--) {
            ((DefaultTableModel) tblProductRevenue.getModel()).removeRow(i);
        }
    }
    
    private int calculateTotalSalesRevenue() {
        int total = 0;
        for (Order order : orders) {
            for (OrderItem oi : order.getOrderitems()) {
                total += oi.getOrderItemTotal();
            }
        }
        return total;
    }
    
    private double calculateRevenuePercentage(Product product) {
    int totalRevenue = calculateRevenueForProduct(product);
    System.out.println("Total revenue:" +totalRevenue);
    int targetSalesRevenue = product.getTargetSalesRevenue();
    System.out.println("Target Sales Revenue: " +targetSalesRevenue);
    
    // Calculate revenue percentage
    double revenuePercentage = ((double) totalRevenue / targetSalesRevenue) * 100;
    System.out.println("Revenue Percentage:" +revenuePercentage);
    
    return revenuePercentage;
}
    
    private int calculateRevenueForProduct(Product product) {
        int totalRevenue = 0;
        for (Order order : orders) {
            totalRevenue += order.getSalesRevenueForProduct(product);
        }
        
        return totalRevenue;
    }
}


